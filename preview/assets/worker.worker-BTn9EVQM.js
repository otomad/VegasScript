var st=Object.defineProperty;var g=(z,I)=>st(z,"name",{value:I,configurable:!0});(function(){"use strict";class z{static{g(this,"Histogram")}constructor(t,n){this.pixels=t,this.opts=n;const{sigBits:r}=n,o=g((V,y,b)=>(V<<2*r)+(y<<r)+b,"getColorIndex");this.getColorIndex=o;const e=8-r,s=1<<3*r,a=new Uint32Array(s);let u,l,h,f,d,L,c,m,_,C;u=h=d=0,l=f=L=Number.MAX_VALUE;const w=t.length/4;let T=0;for(;T<w;){const V=T*4;if(T++,c=t[V+0],m=t[V+1],_=t[V+2],C=t[V+3],C===0)continue;c=c>>e,m=m>>e,_=_>>e;const y=o(c,m,_);a[y]===void 0&&(a[y]=0),a[y]+=1,c>u&&(u=c),c<l&&(l=c),m>h&&(h=m),m<f&&(f=m),_>d&&(d=_),_<L&&(L=_)}this._colorCount=a.reduce((V,y)=>y>0?V+1:V,0),this.hist=a,this.rmax=u,this.rmin=l,this.gmax=h,this.gmin=f,this.bmax=d,this.bmin=L}get colorCount(){return this._colorCount}}function I(i,t){var n;if(t.length>0){const r=i.data,o=r.length/4;let e,s,a,u,l;for(let h=0;h<o;h++){e=h*4,s=r[e+0],a=r[e+1],u=r[e+2],l=r[e+3];for(let f=0;f<t.length;f++)if(!((n=t[f])!=null&&n.call(t,s,a,u,l))){r[e+3]=0;break}}}return i}g(I,"applyFilters");class A{static{g(this,"Stage")}constructor(t){this.pipeline=t,this._map={}}names(){return Object.keys(this._map)}has(t){return!!this._map[t]}get(t){return this._map[t]}register(t,n){return this._map[t]=n,this.pipeline}}class W{static{g(this,"BasicPipeline")}constructor(){this.filter=new A(this),this.quantizer=new A(this),this.generator=new A(this)}_buildProcessTasks({filters:t,quantizer:n,generators:r}){return r.length===1&&r[0]==="*"&&(r=this.generator.names()),{filters:t.map(e=>o(this.filter,e)),quantizer:o(this.quantizer,n),generators:r.map(e=>o(this.generator,e))};function o(e,s){let a,u;return typeof s=="string"?a=s:(a=s.name,u=s.options),{name:a,fn:e.get(a),options:u}}g(o,"createTask")}async process(t,n){const{filters:r,quantizer:o,generators:e}=this._buildProcessTasks(n),s=await this._filterColors(r,t),a=await this._generateColors(o,s),u=await this._generatePalettes(e,a);return{colors:a,palettes:u}}_filterColors(t,n){return Promise.resolve(I(n,t.map(({fn:r})=>r)))}_generateColors(t,n){return Promise.resolve(t.fn(n.data,t.options))}async _generatePalettes(t,n){const r=await Promise.all(t.map(({fn:o,options:e})=>Promise.resolve(o(n,e))));return Promise.resolve(r.reduce((o,e,s)=>(o[t[s].name]=e,o),{}))}}function Y(i,t){i.onmessage=n=>{const r=n.data,{id:o,payload:e}=r;Promise.resolve(t(...e)).then(s=>{i.postMessage({id:o,type:"return",payload:s})}).catch(s=>{i.postMessage({id:o,type:"error",payload:s.message})})}}g(Y,"runInWorker");function G(i,t,n){return"#"+((1<<24)+(i<<16)+(t<<8)+n).toString(16).slice(1,7)}g(G,"rgbToHex");function R(i,t,n){i/=255,t/=255,n/=255;const r=Math.max(i,t,n),o=Math.min(i,t,n);let e=0,s=0;const a=(r+o)/2;if(r!==o){const u=r-o;switch(s=a>.5?u/(2-r-o):u/(r+o),r){case i:e=(t-n)/u+(t<n?6:0);break;case t:e=(n-i)/u+2;break;case n:e=(i-t)/u+4;break}e/=6}return[e,s,a]}g(R,"rgbToHsl");function D(i,t,n){let r,o,e;function s(a,u,l){return l<0&&(l+=1),l>1&&(l-=1),l<1/6?a+(u-a)*6*l:l<1/2?u:l<2/3?a+(u-a)*(2/3-l)*6:a}if(g(s,"hue2rgb"),t===0)r=o=e=n;else{const a=n<.5?n*(1+t):n+t-n*t,u=2*n-a;r=s(u,a,i+1/3),o=s(u,a,i),e=s(u,a,i-1/3)}return[r*255,o*255,e*255]}g(D,"hslToRgb");class v{static{g(this,"Swatch")}static applyFilters(t,n){return n.length>0?t.filter(({r,g:o,b:e})=>{var s;for(let a=0;a<n.length;a++)if(!((s=n[a])!=null&&s.call(n,r,o,e,255)))return!1;return!0}):t}static clone(t){return new v(t._rgb,t._population)}get r(){return this._rgb[0]}get g(){return this._rgb[1]}get b(){return this._rgb[2]}get rgb(){return this._rgb}get hsl(){if(!this._hsl){const[t,n,r]=this._rgb;this._hsl=R(t,n,r)}return this._hsl}get hex(){if(!this._hex){const[t,n,r]=this._rgb;this._hex=G(t,n,r)}return this._hex}get population(){return this._population}toJSON(){return{rgb:this.rgb,population:this.population}}getYiq(){if(!this._yiq){const t=this._rgb;this._yiq=(t[0]*299+t[1]*587+t[2]*114)/1e3}return this._yiq}get titleTextColor(){return this._titleTextColor||(this._titleTextColor=this.getYiq()<200?"#fff":"#000"),this._titleTextColor}get bodyTextColor(){return this._bodyTextColor||(this._bodyTextColor=this.getYiq()<150?"#fff":"#000"),this._bodyTextColor}constructor(t,n){this._rgb=t,this._population=n}}function J(i,t){Y(i,(n,r)=>t.process(n,r))}g(J,"runPipelineInWorker");const U=5,q=8-U;class N{static{g(this,"VBox")}constructor(t,n,r,o,e,s,a){this.histogram=a,this._volume=-1,this._avg=null,this._count=-1,this.dimension={r1:t,r2:n,g1:r,g2:o,b1:e,b2:s}}static build(t){const n=new z(t,{sigBits:U}),{rmin:r,rmax:o,gmin:e,gmax:s,bmin:a,bmax:u}=n;return new N(r,o,e,s,a,u,n)}invalidate(){this._volume=this._count=-1,this._avg=null}volume(){if(this._volume<0){const{r1:t,r2:n,g1:r,g2:o,b1:e,b2:s}=this.dimension;this._volume=(n-t+1)*(o-r+1)*(s-e+1)}return this._volume}count(){if(this._count<0){const{hist:t,getColorIndex:n}=this.histogram,{r1:r,r2:o,g1:e,g2:s,b1:a,b2:u}=this.dimension;let l=0;for(let h=r;h<=o;h++)for(let f=e;f<=s;f++)for(let d=a;d<=u;d++){const L=n(h,f,d);t[L]&&(l+=t[L])}this._count=l}return this._count}clone(){const{histogram:t}=this,{r1:n,r2:r,g1:o,g2:e,b1:s,b2:a}=this.dimension;return new N(n,r,o,e,s,a,t)}avg(){if(!this._avg){const{hist:t,getColorIndex:n}=this.histogram,{r1:r,r2:o,g1:e,g2:s,b1:a,b2:u}=this.dimension;let l=0;const h=1<<8-U;let f,d,L;f=d=L=0;for(let c=r;c<=o;c++)for(let m=e;m<=s;m++)for(let _=a;_<=u;_++){const C=n(c,m,_),w=t[C];w&&(l+=w,f+=w*(c+.5)*h,d+=w*(m+.5)*h,L+=w*(_+.5)*h)}l?this._avg=[~~(f/l),~~(d/l),~~(L/l)]:this._avg=[~~(h*(r+o+1)/2),~~(h*(e+s+1)/2),~~(h*(a+u+1)/2)]}return this._avg}contains(t){let[n,r,o]=t;const{r1:e,r2:s,g1:a,g2:u,b1:l,b2:h}=this.dimension;return n>>=q,r>>=q,o>>=q,n>=e&&n<=s&&r>=a&&r<=u&&o>=l&&o<=h}split(){const{hist:t,getColorIndex:n}=this.histogram,{r1:r,r2:o,g1:e,g2:s,b1:a,b2:u}=this.dimension,l=this.count();if(!l)return[];if(l===1)return[this.clone()];const h=o-r+1,f=s-e+1,d=u-a+1,L=Math.max(h,f,d);let c=null,m,_;m=_=0;let C=null;if(L===h){C="r",c=new Uint32Array(o+1);for(let b=r;b<=o;b++){m=0;for(let x=e;x<=s;x++)for(let M=a;M<=u;M++){const S=n(b,x,M);t[S]&&(m+=t[S])}_+=m,c[b]=_}}else if(L===f){C="g",c=new Uint32Array(s+1);for(let b=e;b<=s;b++){m=0;for(let x=r;x<=o;x++)for(let M=a;M<=u;M++){const S=n(x,b,M);t[S]&&(m+=t[S])}_+=m,c[b]=_}}else{C="b",c=new Uint32Array(u+1);for(let b=a;b<=u;b++){m=0;for(let x=r;x<=o;x++)for(let M=e;M<=s;M++){const S=n(x,M,b);t[S]&&(m+=t[S])}_+=m,c[b]=_}}let w=-1;const T=new Uint32Array(c.length);for(let b=0;b<c.length;b++){const x=c[b];x&&(w<0&&x>_/2&&(w=b),T[b]=_-x)}const V=this;function y(b){const x=b+"1",M=b+"2",S=V.dimension[x];let k=V.dimension[M];const j=V.clone(),F=V.clone(),H=w-S,O=k-w;for(H<=O?(k=Math.min(k-1,~~(w+O/2)),k=Math.max(0,k)):(k=Math.max(S,~~(w-1-H/2)),k=Math.min(V.dimension[M],k));!c[k];)k++;let Q=T[k];for(;!Q&&c[k-1];)Q=T[--k];return j.dimension[M]=k,F.dimension[x]=k+1,[j,F]}return g(y,"doCut"),y(C)}}class B{static{g(this,"PQueue")}_sort(){this._sorted||(this.contents.sort(this._comparator),this._sorted=!0)}constructor(t){this._comparator=t,this.contents=[],this._sorted=!1}push(t){this.contents.push(t),this._sorted=!1}peek(t){return this._sort(),t=typeof t=="number"?t:this.contents.length-1,this.contents[t]}pop(){return this._sort(),this.contents.pop()}size(){return this.contents.length}map(t){return this._sort(),this.contents.map(t)}}const X=.75;function E(i,t){let n=i.size();for(;i.size()<t;){const r=i.pop();if(r&&r.count()>0){const[o,e]=r.split();if(!o||(i.push(o),e&&e.count()>0&&i.push(e),i.size()===n))break;n=i.size()}else break}}g(E,"_splitBoxes");const K=g((i,t)=>{if(i.length===0||t.colorCount<2||t.colorCount>256)throw new Error("Wrong MMCQ parameters");const n=N.build(i);n.histogram.colorCount;const r=new B((e,s)=>e.count()-s.count());r.push(n),E(r,X*t.colorCount);const o=new B((e,s)=>e.count()*e.volume()-s.count()*s.volume());return o.contents=r.contents,E(o,t.colorCount-o.size()),Z(o)},"MMCQ");function Z(i){const t=[];for(;i.size();){const n=i.pop(),r=n.avg();t.push(new v(r,n.count()))}return t}g(Z,"generateSwatches");const $={targetDarkLuma:.26,maxDarkLuma:.45,minLightLuma:.55,targetLightLuma:.74,minNormalLuma:.3,targetNormalLuma:.5,maxNormalLuma:.7,targetMutesSaturation:.3,maxMutesSaturation:.4,targetVibrantSaturation:1,minVibrantSaturation:.35,weightSaturation:3,weightLuma:6.5,weightPopulation:.5};function p(i){let t=0;return i.forEach(n=>{t=Math.max(t,n.population)}),t}g(p,"_findMaxPopulation");function tt(i,t){return i.Vibrant===t||i.DarkVibrant===t||i.LightVibrant===t||i.Muted===t||i.DarkMuted===t||i.LightMuted===t}g(tt,"_isAlreadySelected");function nt(i,t,n,r,o,e,s){function a(...l){let h=0,f=0;for(let d=0;d<l.length;d+=2){const L=l[d],c=l[d+1];!L||!c||(h+=L*c,f+=c)}return h/f}g(a,"weightedMean");function u(l,h){return 1-Math.abs(l-h)}return g(u,"invertDiff"),a(u(i,t),s.weightSaturation,u(n,r),s.weightLuma,o/e,s.weightPopulation)}g(nt,"_createComparisonValue");function P(i,t,n,r,o,e,s,a,u,l){let h=null,f=0;return t.forEach(d=>{const[,L,c]=d.hsl;if(L>=a&&L<=u&&c>=o&&c<=e&&!tt(i,d)){const m=nt(L,s,c,r,d.population,n,l);(h===null||m>f)&&(h=d,f=m)}}),h}g(P,"_findColorVariation");function rt(i,t,n){const r={Vibrant:null,DarkVibrant:null,LightVibrant:null,Muted:null,DarkMuted:null,LightMuted:null};return r.Vibrant=P(r,i,t,n.targetNormalLuma,n.minNormalLuma,n.maxNormalLuma,n.targetVibrantSaturation,n.minVibrantSaturation,1,n),r.LightVibrant=P(r,i,t,n.targetLightLuma,n.minLightLuma,1,n.targetVibrantSaturation,n.minVibrantSaturation,1,n),r.DarkVibrant=P(r,i,t,n.targetDarkLuma,0,n.maxDarkLuma,n.targetVibrantSaturation,n.minVibrantSaturation,1,n),r.Muted=P(r,i,t,n.targetNormalLuma,n.minNormalLuma,n.maxNormalLuma,n.targetMutesSaturation,0,n.maxMutesSaturation,n),r.LightMuted=P(r,i,t,n.targetLightLuma,n.minLightLuma,1,n.targetMutesSaturation,0,n.maxMutesSaturation,n),r.DarkMuted=P(r,i,t,n.targetDarkLuma,0,n.maxDarkLuma,n.targetMutesSaturation,0,n.maxMutesSaturation,n),r}g(rt,"_generateVariationColors");function it(i,t,n){if(!i.Vibrant&&!i.DarkVibrant&&!i.LightVibrant){if(!i.DarkVibrant&&i.DarkMuted){let[r,o,e]=i.DarkMuted.hsl;e=n.targetDarkLuma,i.DarkVibrant=new v(D(r,o,e),0)}if(!i.LightVibrant&&i.LightMuted){let[r,o,e]=i.LightMuted.hsl;e=n.targetDarkLuma,i.DarkVibrant=new v(D(r,o,e),0)}}if(!i.Vibrant&&i.DarkVibrant){let[r,o,e]=i.DarkVibrant.hsl;e=n.targetNormalLuma,i.Vibrant=new v(D(r,o,e),0)}else if(!i.Vibrant&&i.LightVibrant){let[r,o,e]=i.LightVibrant.hsl;e=n.targetNormalLuma,i.Vibrant=new v(D(r,o,e),0)}if(!i.DarkVibrant&&i.Vibrant){let[r,o,e]=i.Vibrant.hsl;e=n.targetDarkLuma,i.DarkVibrant=new v(D(r,o,e),0)}if(!i.LightVibrant&&i.Vibrant){let[r,o,e]=i.Vibrant.hsl;e=n.targetLightLuma,i.LightVibrant=new v(D(r,o,e),0)}if(!i.Muted&&i.Vibrant){let[r,o,e]=i.Vibrant.hsl;e=n.targetMutesSaturation,i.Muted=new v(D(r,o,e),0)}if(!i.DarkMuted&&i.DarkVibrant){let[r,o,e]=i.DarkVibrant.hsl;e=n.targetMutesSaturation,i.DarkMuted=new v(D(r,o,e),0)}if(!i.LightMuted&&i.LightVibrant){let[r,o,e]=i.LightVibrant.hsl;e=n.targetMutesSaturation,i.LightMuted=new v(D(r,o,e),0)}}g(it,"_generateEmptySwatches");const et=g((i,t)=>{t=Object.assign({},$,t);const n=p(i),r=rt(i,n,t);return it(r,n,t),r},"DefaultGenerator"),ot=new W().filter.register("default",(i,t,n,r)=>r>=125&&!(i>250&&t>250&&n>250)).quantizer.register("mmcq",K).generator.register("default",et);J(self,ot)})();
