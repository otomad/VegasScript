diff --git a/cjs/react-dom-client.development.js b/cjs/react-dom-client.development.js
index 83ea1c6a783efe2e674eda4b681eb361f000d12d..f338b593f99d51bea1ff4f9908be09a13784aa1e 100644
--- a/cjs/react-dom-client.development.js
+++ b/cjs/react-dom-client.development.js
@@ -1387,7 +1387,13 @@
     }
     function setValueForAttribute(node, name, value) {
       if (isAttributeNameSafe(name))
-        if (null === value) node.removeAttribute(name);
+        if (name.startsWith("data-") && typeof value === "boolean") {
+          if (!value) {
+            node.removeAttribute(name);
+          } else {
+            node.setAttribute(name, "");
+          }
+        } else if (null === value) node.removeAttribute(name);
         else {
           switch (typeof value) {
             case "undefined":
@@ -2454,6 +2460,8 @@
       return null;
     }
     function validateDOMNesting(childTag, ancestorInfo) {
+      return; // Stop reporting the fucking errors, I insist on writing the invalid html.
+
       ancestorInfo = ancestorInfo || emptyAncestorInfoDev;
       var parentInfo = ancestorInfo.current;
       ancestorInfo = (parentInfo = isTagValidWithParent(
@@ -2772,6 +2780,7 @@
           );
     }
     function validateProperty(tagName, name, value, eventRegistry) {
+      if (isI18nItem(value)) return !0;
       if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name])
         return !0;
       var lowerCasedName = name.toLowerCase();
@@ -4490,6 +4499,9 @@
               parentName
             ));
     }
+    function isI18nItem(newChild) {
+      return !!newChild?.[Symbol.for("react-i18next.i18n_item")];
+    }
     function createChildReconciler(shouldTrackSideEffects) {
       function deleteChild(returnFiber, childToDelete) {
         if (shouldTrackSideEffects) {
@@ -4638,7 +4650,8 @@
         if (
           ("string" === typeof newChild && "" !== newChild) ||
           "number" === typeof newChild ||
-          "bigint" === typeof newChild
+          "bigint" === typeof newChild ||
+          isI18nItem(newChild)
         )
           return (
             (newChild = createFiberFromText(
@@ -4729,7 +4742,8 @@
         if (
           ("string" === typeof newChild && "" !== newChild) ||
           "number" === typeof newChild ||
-          "bigint" === typeof newChild
+          "bigint" === typeof newChild ||
+          isI18nItem(newChild)
         )
           return null !== key
             ? null
@@ -4815,7 +4829,8 @@
         if (
           ("string" === typeof newChild && "" !== newChild) ||
           "number" === typeof newChild ||
-          "bigint" === typeof newChild
+          "bigint" === typeof newChild ||
+          isI18nItem(newChild)
         )
           return (
             (existingChildren = existingChildren.get(newIdx) || null),
@@ -5378,7 +5393,8 @@
         if (
           ("string" === typeof newChild && "" !== newChild) ||
           "number" === typeof newChild ||
-          "bigint" === typeof newChild
+          "bigint" === typeof newChild ||
+          isI18nItem(newChild)
         )
           return (
             (prevDebugInfo = "" + newChild),
@@ -16898,6 +16914,7 @@
     }
     function noop$1() {}
     function setProp(domElement, tag, key, value, props, prevValue) {
+      if (isI18nItem(value)) value = value.toString();
       switch (key) {
         case "children":
           if ("string" === typeof value)
diff --git a/cjs/react-dom-client.production.js b/cjs/react-dom-client.production.js
index af7283abaca3e5812ef71b03d9c999410baa1a80..f67ed9a426d7cffcff0cb5ed775cfaf493c4914c 100644
--- a/cjs/react-dom-client.production.js
+++ b/cjs/react-dom-client.production.js
@@ -909,7 +909,13 @@ function isAttributeNameSafe(attributeName) {
 }
 function setValueForAttribute(node, name, value) {
   if (isAttributeNameSafe(name))
-    if (null === value) node.removeAttribute(name);
+    if (name.startsWith("data-") && typeof value === "boolean") {
+      if (!value) {
+        node.removeAttribute(name);
+      } else {
+        node.setAttribute(name, "");
+      }
+    } else if (null === value) node.removeAttribute(name);
     else {
       switch (typeof value) {
         case "undefined":
@@ -2751,6 +2757,9 @@ function resolveLazy(lazyType) {
   var init = lazyType._init;
   return init(lazyType._payload);
 }
+function isI18nItem(newChild) {
+  return !!newChild?.[Symbol.for("react-i18next.i18n_item")];
+}
 function createChildReconciler(shouldTrackSideEffects) {
   function deleteChild(returnFiber, childToDelete) {
     if (shouldTrackSideEffects) {
@@ -2885,7 +2894,8 @@ function createChildReconciler(shouldTrackSideEffects) {
     if (
       ("string" === typeof newChild && "" !== newChild) ||
       "number" === typeof newChild ||
-      "bigint" === typeof newChild
+      "bigint" === typeof newChild ||
+      isI18nItem(newChild)
     )
       return (
         (newChild = createFiberFromText(
@@ -2955,7 +2965,8 @@ function createChildReconciler(shouldTrackSideEffects) {
     if (
       ("string" === typeof newChild && "" !== newChild) ||
       "number" === typeof newChild ||
-      "bigint" === typeof newChild
+      "bigint" === typeof newChild ||
+      isI18nItem(newChild)
     )
       return null !== key
         ? null
@@ -3009,7 +3020,8 @@ function createChildReconciler(shouldTrackSideEffects) {
     if (
       ("string" === typeof newChild && "" !== newChild) ||
       "number" === typeof newChild ||
-      "bigint" === typeof newChild
+      "bigint" === typeof newChild ||
+      isI18nItem(newChild)
     )
       return (
         (existingChildren = existingChildren.get(newIdx) || null),
@@ -3395,7 +3407,8 @@ function createChildReconciler(shouldTrackSideEffects) {
     }
     return ("string" === typeof newChild && "" !== newChild) ||
       "number" === typeof newChild ||
-      "bigint" === typeof newChild
+      "bigint" === typeof newChild ||
+      isI18nItem(newChild)
       ? ((newChild = "" + newChild),
         null !== currentFirstChild && 6 === currentFirstChild.tag
           ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling),
@@ -12347,6 +12360,7 @@ function checkForUnmatchedText(serverText, clientText) {
 }
 function noop$1() {}
 function setProp(domElement, tag, key, value, props, prevValue) {
+  if (isI18nItem(value)) value = value.toString();
   switch (key) {
     case "children":
       "string" === typeof value
